package abalone;

import javax.swing.*;

public class DlgConfigRemote extends javax.swing.JDialog {

    public static final int SERVER_PORT = 8989;
    private static String regexIP = "^(?:(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(\\.(?!$)|$)){4}$";
    private static String serverIP = "127.0.0.1";
    private static boolean blueRemote = false;
    private static boolean redRemote = false;
    private static boolean greenRemote = false;
    private static boolean orangeRemote = false;
    private static String nameBlue = "";
    private static String nameRed = "";
    private static String nameGreen = "";
    private static String nameOrange = "";
    private static boolean OK = false;

    public static boolean isOK() {
        return OK;
    }

    public static String getServerIP() {
        return serverIP;
    }

    public static String getNameBlue() {
        return nameBlue;
    }

    public static void setNameBlue(String nb) {
        nameBlue = nb;
    }

    public static String getNameRed() {
        return nameRed;
    }

    public static void setNameRed(String nr) {
        nameRed = nr;
    }

    public static String getNameGreen() {
        return nameGreen;
    }

    public static void setNameGreen(String ng) {
        nameGreen = ng;
    }

    public static String getNameOrange() {
        return nameOrange;
    }

    public static void setNameOrange(String no) {
        nameOrange = no;
    }

    public static boolean getBlueRemote() {
        return blueRemote;
    }

    public static void setBlueRemote(boolean br) {
        blueRemote = br;
    }

    public static boolean getRedRemote() {
        return redRemote;
    }

    public static void setRedRemote(boolean rr) {
        redRemote = rr;
    }

    public static boolean getGreenRemote() {
        return greenRemote;
    }

    public static void setGreenRemote(boolean gr) {
        greenRemote = gr;
    }

    public static boolean getOrangeRemote() {
        return orangeRemote;
    }

    public static void setOrangeRemote(boolean or) {
        orangeRemote = or;
    }

    public static boolean isRemote() {
        return blueRemote || redRemote || greenRemote || orangeRemote;
    }

    private int mode;

    public DlgConfigRemote(java.awt.Frame parent, int mode, boolean modal) {
        super(parent, modal);
        initComponents();
        this.mode = mode;
        txtServerIP.setText(serverIP);
        if (mode == 2) {
            greenRemote = false;
            orangeRemote = false;
            ckGreenRemote.setEnabled(false);
            ckOrangeRemote.setEnabled(false);
            txtNameGreen.setEnabled(false);
            txtNameOrange.setEnabled(false);
            if (blueRemote && redRemote) {
                redRemote = false;
            }
        } else if (mode == 3) {
            orangeRemote = false;
            ckOrangeRemote.setEnabled(false);
            txtNameOrange.setEnabled(false);
            if (blueRemote && redRemote && greenRemote) {
                greenRemote = false;
            }
        }
        ckBlueRemote.setSelected(blueRemote);
        ckRedRemote.setSelected(redRemote);
        ckGreenRemote.setSelected(greenRemote);
        ckOrangeRemote.setSelected(orangeRemote);
        if (blueRemote) {
            txtNameBlue.setEnabled(false);
        }
        if (redRemote) {
            txtNameRed.setEnabled(false);
        }
        if (greenRemote) {
            txtNameGreen.setEnabled(false);
        }
        if (orangeRemote) {
            txtNameOrange.setEnabled(false);
        }
        txtNameBlue.setText(nameBlue);
        txtNameRed.setText(nameRed);
        txtNameGreen.setText(nameGreen);
        txtNameOrange.setText(nameOrange);
        setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtServerIP = new javax.swing.JTextField();
        lblServerIP = new javax.swing.JLabel();
        ckBlueRemote = new javax.swing.JCheckBox();
        ckRedRemote = new javax.swing.JCheckBox();
        ckGreenRemote = new javax.swing.JCheckBox();
        ckOrangeRemote = new javax.swing.JCheckBox();
        lblNameBlue = new javax.swing.JLabel();
        txtNameBlue = new javax.swing.JTextField();
        lblNameRed = new javax.swing.JLabel();
        txtNameRed = new javax.swing.JTextField();
        lblNameGreen = new javax.swing.JLabel();
        txtNameGreen = new javax.swing.JTextField();
        lblNameOrange = new javax.swing.JLabel();
        txtNameOrange = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configure Remote");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btnOK.setText("Start");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblServerIP.setText("Server IP:");

        ckBlueRemote.setText("Blue Remote");
        ckBlueRemote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckBlueRemoteActionPerformed(evt);
            }
        });

        ckRedRemote.setText("Red Remote");
        ckRedRemote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckRedRemoteActionPerformed(evt);
            }
        });

        ckGreenRemote.setText("Green Remote");
        ckGreenRemote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckGreenRemoteActionPerformed(evt);
            }
        });

        ckOrangeRemote.setText("Orange Remote");
        ckOrangeRemote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckOrangeRemoteActionPerformed(evt);
            }
        });

        lblNameBlue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNameBlue.setText("Name Blue:");

        lblNameRed.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNameRed.setText("Name Red:");

        lblNameGreen.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNameGreen.setText("Name Green:");

        lblNameOrange.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNameOrange.setText("Name Orange:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ckBlueRemote)
                                            .addComponent(ckRedRemote))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblNameRed)
                                            .addComponent(lblNameBlue)))
                                    .addComponent(txtServerIP, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblServerIP))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ckGreenRemote)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblNameGreen)
                                .addGap(3, 3, 3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(ckOrangeRemote)
                                .addGap(18, 18, 18)
                                .addComponent(lblNameOrange)
                                .addGap(3, 3, 3)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNameOrange, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNameGreen, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNameBlue, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNameRed, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)))
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblServerIP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtServerIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckBlueRemote)
                    .addComponent(txtNameBlue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNameBlue))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckRedRemote)
                    .addComponent(txtNameRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNameRed))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckGreenRemote)
                    .addComponent(txtNameGreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNameGreen))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckOrangeRemote)
                    .addComponent(txtNameOrange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNameOrange))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOK))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        String sIP = txtServerIP.getText().trim();
        if (!sIP.matches(regexIP)) {
            JOptionPane.showMessageDialog(null, "Invalid IP " + sIP,
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        serverIP = sIP;
        blueRemote = ckBlueRemote.isSelected();
        redRemote = ckRedRemote.isSelected();
        greenRemote = ckGreenRemote.isSelected();
        orangeRemote = ckOrangeRemote.isSelected();
        nameBlue = txtNameBlue.getText().trim();
        nameRed = txtNameRed.getText().trim();
        nameGreen = txtNameGreen.getText().trim();
        nameOrange = txtNameOrange.getText().trim();
        this.dispose();
        OK = true;
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        OK = false;
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void ckBlueRemoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckBlueRemoteActionPerformed
        if (ckBlueRemote.isSelected()) {
            if (mode == 2 && ckRedRemote.isSelected() || mode == 3 && ckRedRemote.isSelected() && ckGreenRemote.isSelected()
                    || mode == 4 && ckRedRemote.isSelected() && ckGreenRemote.isSelected() && ckOrangeRemote.isSelected()) {
                ckBlueRemote.setSelected(false);
                return;
            }
        }
        txtNameBlue.setEnabled(!ckBlueRemote.isSelected());
    }//GEN-LAST:event_ckBlueRemoteActionPerformed

    private void ckRedRemoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckRedRemoteActionPerformed
        if (ckRedRemote.isSelected()) {
            if (mode == 2 && ckBlueRemote.isSelected() || mode == 3 && ckBlueRemote.isSelected() && ckGreenRemote.isSelected()
                    || mode == 4 && ckBlueRemote.isSelected() && ckGreenRemote.isSelected() && ckOrangeRemote.isSelected()) {
                ckRedRemote.setSelected(false);
                return;
            }
        }
        txtNameRed.setEnabled(!ckRedRemote.isSelected());
    }//GEN-LAST:event_ckRedRemoteActionPerformed

    private void ckGreenRemoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckGreenRemoteActionPerformed
        if (ckGreenRemote.isSelected()) {
            if (mode == 3 && ckBlueRemote.isSelected() && ckRedRemote.isSelected()
                    || mode == 4 && ckBlueRemote.isSelected() && ckRedRemote.isSelected() && ckOrangeRemote.isSelected()) {
                ckGreenRemote.setSelected(false);
                return;
            }
        }
        txtNameGreen.setEnabled(!ckGreenRemote.isSelected());
    }//GEN-LAST:event_ckGreenRemoteActionPerformed

    private void ckOrangeRemoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckOrangeRemoteActionPerformed
        if (ckOrangeRemote.isSelected()) {
            if (mode == 4 && ckBlueRemote.isSelected() && ckRedRemote.isSelected() && ckGreenRemote.isSelected()) {
                ckOrangeRemote.setSelected(false);
                return;
            }
        }
        txtNameOrange.setEnabled(!ckOrangeRemote.isSelected());
    }//GEN-LAST:event_ckOrangeRemoteActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        OK = false;
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JCheckBox ckBlueRemote;
    private javax.swing.JCheckBox ckGreenRemote;
    private javax.swing.JCheckBox ckOrangeRemote;
    private javax.swing.JCheckBox ckRedRemote;
    private javax.swing.JLabel lblNameBlue;
    private javax.swing.JLabel lblNameGreen;
    private javax.swing.JLabel lblNameOrange;
    private javax.swing.JLabel lblNameRed;
    private javax.swing.JLabel lblServerIP;
    private javax.swing.JTextField txtNameBlue;
    private javax.swing.JTextField txtNameGreen;
    private javax.swing.JTextField txtNameOrange;
    private javax.swing.JTextField txtNameRed;
    private javax.swing.JTextField txtServerIP;
    // End of variables declaration//GEN-END:variables
}
